from typing_extensions import Any

def baz(a: int, b: float, /, c: bool = True, *, d: str) -> bool: ...
def foo(a:int, b:int, /, c:int, *d:Any, e:int, f:int, **g:Any) -> bool: ...
def bar(a: int, b:int=1, c:int=2, *d:Any, e:int, f:int=3, **g:Any) -> bool: ...
def qux(a:int, b:float, c:str) -> complex: ...
def corge(*args:Any, **kwargs:Any) -> bool: ...
def fred(*args:str, **kwargs:str) -> bool: ...
def thud(*args: _KT, **kwargs: _VT) -> bool: ...
def waldo(*args: Iterable[_KT] , **kwargs: Iterable[_VT]) -> bool: ...
def emerson(a:list[_T], b:Any) -> _T: ...
def lake(b:_T, *args:Iterable[_T]) -> None: ...
